{"ast":null,"code":"import _defineProperty from \"/Users/macapple/dev/workspace/react-zero2master/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { reject } from 'q';\nconst config = {\n  apiKey: 'AIzaSyD3EM1aChDECQ6RQ2rguZPom01CzBydexY',\n  authDomain: 'crwn-db-14c71.firebaseapp.com',\n  databaseURL: 'https://crwn-db-14c71.firebaseio.com',\n  projectId: 'crwn-db-14c71',\n  storageBucket: 'crwn-db-14c71.appspot.com',\n  messagingSenderId: '843012410450',\n  appId: '1:843012410450:web:cb213964e8b9e2e6efa38b',\n  measurementId: 'G-74RGLTL8MP'\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = async (collectionKey, items) => {\n  const collectionReference = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  items.forEach(item => {\n    const documentReference = collectionReference.doc();\n    batch.set(documentReference, item);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const singInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user ', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/macapple/dev/workspace/react-zero2master/crwn-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","reject","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","addCollectionAndDocuments","collectionKey","items","collectionReference","firestore","collection","batch","forEach","item","documentReference","doc","set","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","routeName","encodeURI","toLowerCase","id","reduce","accumulator","auth","getCurrentUser","Promise","resolve","unsubscribe","onAuthStateChanged","userAuth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","singInWithGoogle","signInWithPopup","createUserProfileDocument","additionalData","userRef","uid","snapShot","get","exists","displayName","email","createAt","Date","error","console","log","message"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { reject } from 'q';\n\nconst config = {\n  apiKey: 'AIzaSyD3EM1aChDECQ6RQ2rguZPom01CzBydexY',\n  authDomain: 'crwn-db-14c71.firebaseapp.com',\n  databaseURL: 'https://crwn-db-14c71.firebaseio.com',\n  projectId: 'crwn-db-14c71',\n  storageBucket: 'crwn-db-14c71.appspot.com',\n  messagingSenderId: '843012410450',\n  appId: '1:843012410450:web:cb213964e8b9e2e6efa38b',\n  measurementId: 'G-74RGLTL8MP'\n};\n\nfirebase.initializeApp(config);\n\nexport const addCollectionAndDocuments = async (collectionKey, items) => {\n  const collectionReference = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  items.forEach(item => {\n    const documentReference = collectionReference.doc();\n    batch.set(documentReference, item);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const singInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({ displayName, email, createAt, ...additionalData });\n    } catch (error) {\n      console.log('error creating user ', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}