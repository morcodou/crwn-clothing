{"ast":null,"code":"import { call, put, takeLatest, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionReference = firestore.collection('collections');\n    const snapshot = yield collectionReference.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // dispatch(fetchCollectionsStart());\n  // collectionReference\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  // yield console.log('I am fired');\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/macapple/dev/workspace/react-zero2master/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["call","put","takeLatest","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionReference","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,mBAAmB,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMF,mBAAmB,CAACG,GAApB,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAC/BM,+BAD+B,EAE/BM,QAF+B,CAAjC;AAIA,UAAMX,GAAG,CAACM,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACO,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD,GAXsC,CAavC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMf,UAAU,CACdE,eAAe,CAACc,uBADF,EAEdT,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CACRH,IAAI,CAACiB,qBAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import { call, put, takeLatest, all } from 'redux-saga/effects';\n\nimport ShopActionTypes from './shop.types';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils';\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionReference = firestore.collection('collections');\n    const snapshot = yield collectionReference.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n\n  // dispatch(fetchCollectionsStart());\n\n  // collectionReference\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n  // yield console.log('I am fired');\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([\n    call(fetchCollectionsStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}